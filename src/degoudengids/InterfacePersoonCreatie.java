

package degoudengids;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Interface voor het aanmaken van een nieuwe persoon.
 */
public class InterfacePersoonCreatie extends javax.swing.JFrame {

    Database database;

	/**
	 * Bij het aanroepen van deze interface zal er een database doorgegeven worden en zullen alle componenten worden geinitialiseerd.
	 */
    public InterfacePersoonCreatie(Database database) {
		// Koppelen van de doorgegeven databasa
        this.database = database;

		initComponents();

		// Venster op de juiste manier laten verschijnen
		this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setTitle("Persoon aanmaken");
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
	 *
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        achterNaamVak = new javax.swing.JTextField();
        emailVak = new javax.swing.JTextField();
        telVak = new javax.swing.JTextField();
        voorNaamVak = new javax.swing.JTextField();
        voegToeKnop = new javax.swing.JButton();
        annuleerKnop = new javax.swing.JButton();
        naamLabel = new javax.swing.JLabel();
        achterNaamLabel = new javax.swing.JLabel();
        telLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        achterNaamVak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                achterNaamVakActionPerformed(evt);
            }
        });

        emailVak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailVakActionPerformed(evt);
            }
        });

        telVak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telVakActionPerformed(evt);
            }
        });

        voegToeKnop.setText("Voeg toe");
        voegToeKnop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voegToeKnopActionPerformed(evt);
            }
        });

        annuleerKnop.setText("Annuleer");
        annuleerKnop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annuleerKnopActionPerformed(evt);
            }
        });

        naamLabel.setText("Voornaam");

        achterNaamLabel.setText("Achternaam");

        telLabel.setText("Telefoonnummer");

        emailLabel.setText("Email adres");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailLabel)
                    .addComponent(telLabel)
                    .addComponent(achterNaamLabel)
                    .addComponent(naamLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voorNaamVak, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(achterNaamVak, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailVak, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telVak, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(voegToeKnop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(annuleerKnop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voorNaamVak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(naamLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(achterNaamVak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(achterNaamLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailVak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telVak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telLabel))
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voegToeKnop)
                    .addComponent(annuleerKnop))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
     * Knop voor het afsluiten van het venster.
	 *
     * @param evt
     */
    private void annuleerKnopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annuleerKnopActionPerformed
        this.dispose();
    }//GEN-LAST:event_annuleerKnopActionPerformed

    /**
     * Knop om een persoon toe te voegen aan de database met de opgegeven informatie.
	 *
     * Op dit venster staan een aantal TextFields. De ingevulde tekens worden uit deze TextFields gehaald.
     * Er word eerst gechecked of de TextFields wel zijn ingevuld. Daarna word de informatie doorgestuurd naar de database klasse waar het met een methode wordt omgezet naar
     * een persoon object, en de database wordt gevuld. Daarna sluit het frame.
	 *
     * @param evt
     */
    private void voegToeKnopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voegToeKnopActionPerformed
		if (voorNaamVak.getText().isEmpty() || achterNaamVak.getText().isEmpty() || emailVak.getText().isEmpty() || telVak.getText().isEmpty()) {
			if (voorNaamVak.getText().isEmpty()) {
				naamLabel.setForeground(Color.red);
			}
			else {
				naamLabel.setForeground(Color.black);
			}
			if (achterNaamVak.getText().isEmpty()) {
				achterNaamLabel.setForeground(Color.red);
			}
			else {
				achterNaamLabel.setForeground(Color.black);
			}
			if (emailVak.getText().isEmpty()) {
				emailLabel.setForeground(Color.red);
			}
			else {
				emailLabel.setForeground(Color.black);
			}
			if (telVak.getText().isEmpty()) {
				telLabel.setForeground(Color.red);
			}
			else {
				telLabel.setForeground(Color.black);
			}
		}
		else {
			try {
				// Alle opgegeven data wordt lokaal opgeslagen.
				String voornaam = voorNaamVak.getText();
				String achternaam = achterNaamVak.getText();
				String telefoon = emailVak.getText();
				String email = telVak.getText();
				
                                database.toevoegenPersoon(voornaam, achternaam, telefoon, email);
                                database.refreshPersoonQuery();
                                this.dispose();
				
			}
                                catch(Exception ex) {
				Logger.getLogger(Database.class.getName()).log(Level.SEVERE, "Fout tijdens het invoeren van de gegevens van de nieuwe persoon", ex);
			}
                        System.out.println("Persoon succesvol toegevoegd");
		}
    }//GEN-LAST:event_voegToeKnopActionPerformed

    private void achterNaamVakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_achterNaamVakActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_achterNaamVakActionPerformed

    private void emailVakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailVakActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailVakActionPerformed

    private void telVakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telVakActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telVakActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel achterNaamLabel;
    private javax.swing.JTextField achterNaamVak;
    private javax.swing.JButton annuleerKnop;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailVak;
    private javax.swing.JLabel naamLabel;
    private javax.swing.JLabel telLabel;
    private javax.swing.JTextField telVak;
    private javax.swing.JButton voegToeKnop;
    private javax.swing.JTextField voorNaamVak;
    // End of variables declaration//GEN-END:variables
}
