/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package degoudengids;

import java.awt.Color;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rebano
 */
public class InterfaceMedewerkers extends javax.swing.JFrame {

    Database database;

    String orderByVoornaamAsc = " ORDER BY naam ASC ";
    String orderByVoornaamDesc = " ORDER BY voornaam DESC ";
    String orderByAchternaamAsc = " ORDER BY achternaam ASC ";
    String orderByAchternaamDesc = " ORDER BY achternaam DESC ";
    String orderByTelefoonAsc = " ORDER BY telefoon ASC ";
    String orderByTelefoonDesc = " ORDER BY telefoon DESC ";
    String orderByEmailAsc = " ORDER BY email ASC ";
    String orderByEmailDesc = " ORDER BY email DESC ";
    String orderBy = "ORDER BY medew_nr ASC";
    String orderByMedew_nrDesc = "ORDER BY medew_nr DESC";

    /**
     * Creates new form Gids
     */
    public InterfaceMedewerkers(Database database) {
        initComponents();
        this.database = database;
        setVisible(true);
        setPersoonTabel(database.refreshFilterMedewerkerQuery(orderBy));
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        persoonTabel = new javax.swing.JTable();
        voornaamSort = new javax.swing.JButton();
        achternaamSort = new javax.swing.JButton();
        phoneSort = new javax.swing.JButton();
        emailSort = new javax.swing.JButton();
        filterVak = new javax.swing.JTextField();
        filterLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        informatiePersoonKnop = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        persoonTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(persoonTabel);

        voornaamSort.setText("Voornaam");
        voornaamSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voornaamSortActionPerformed(evt);
            }
        });

        achternaamSort.setText("Achternaam");
        achternaamSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                achternaamSortActionPerformed(evt);
            }
        });

        phoneSort.setText("Telefoonnummer");
        phoneSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneSortActionPerformed(evt);
            }
        });

        emailSort.setText("Email adres");
        emailSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailSortActionPerformed(evt);
            }
        });

        filterVak.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterVakKeyReleased(evt);
            }
        });

        filterLabel.setText("Filter");

        jLabel2.setText("Sorteer");

        informatiePersoonKnop.setText("Informatie geselecteerde persoon");
        informatiePersoonKnop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informatiePersoonKnopActionPerformed(evt);
            }
        });

        errorLabel.setText(" ");

        jButton1.setText("Webhistorie");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(voornaamSort)
                        .addGap(72, 72, 72)
                        .addComponent(achternaamSort)
                        .addGap(52, 52, 52)
                        .addComponent(emailSort)
                        .addGap(53, 53, 53)
                        .addComponent(phoneSort)
                        .addGap(82, 82, 82))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filterLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(44, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filterVak)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(errorLabel)
                        .addGap(45, 45, 45)
                        .addComponent(jButton1)
                        .addGap(115, 115, 115)
                        .addComponent(informatiePersoonKnop, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterVak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(achternaamSort)
                    .addComponent(phoneSort)
                    .addComponent(emailSort)
                    .addComponent(jLabel2)
                    .addComponent(voornaamSort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errorLabel)
                    .addComponent(jButton1)
                    .addComponent(informatiePersoonKnop))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterVakKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterVakKeyReleased
        refreshTable();
    }//GEN-LAST:event_filterVakKeyReleased

    private void voornaamSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voornaamSortActionPerformed
        if (orderBy.equals(orderByVoornaamAsc)) {
            orderBy = orderByVoornaamDesc;
        } else {
            orderBy = orderByVoornaamAsc;
        }
        refreshTable();    }//GEN-LAST:event_voornaamSortActionPerformed

    private void achternaamSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_achternaamSortActionPerformed
        if (orderBy.equals(orderByAchternaamAsc)) {
            orderBy = orderByAchternaamDesc;
        } else {
            orderBy = orderByAchternaamAsc;
        }
        refreshTable();
    }//GEN-LAST:event_achternaamSortActionPerformed

    private void phoneSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneSortActionPerformed
        if (orderBy.equals(orderByTelefoonAsc)) {
            orderBy = orderByTelefoonDesc;
        } else {
            orderBy = orderByTelefoonAsc;
        }
        refreshTable();
    }//GEN-LAST:event_phoneSortActionPerformed

    private void emailSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailSortActionPerformed
        if (orderBy.equals(orderByEmailAsc)) {
            orderBy = orderByEmailDesc;
        } else {
            orderBy = orderByEmailAsc;
        }
        refreshTable();
    }//GEN-LAST:event_emailSortActionPerformed

    private void informatiePersoonKnopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informatiePersoonKnopActionPerformed
        if (persoonTabel.getSelectedRow() == -1) {
            errorLabel.setForeground(Color.red);
            errorLabel.setText("Selecteer een persoon.");
        } else {
            
            // Eventuele foutmelding weghalen, aangezien er naar een ander gedeelte in het programma gegaan wordt.
            errorLabel.setText("");

            // Geselecteerde persoon opvragen.
            int persoonID = (int) persoonTabel.getValueAt(persoonTabel.getSelectedRow(), 0);
            Medewerker selected = database.getMedewerker(persoonID);

            // Aanmaken van een nieuw venster.
            InterfacePersoonGegevens interfacePersoonGegevens = new InterfacePersoonGegevens(database, selected);
        }
    }//GEN-LAST:event_informatiePersoonKnopActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceMedewerkers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceMedewerkers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceMedewerkers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceMedewerkers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });

    }

    private void refreshTable() {
        String filter = filterVak.getText();
        if ("".equals(filter) || "Filter".equals(filter)) {
            setPersoonTabel(database.refreshMedewerkerQuery(orderBy));
        } else {
            setPersoonTabel(database.refreshFilterMedewerkerQuery(filter, orderBy));
        }
    }

    public void setPersoonTabel(DefaultListModel<Medewerker> persoonLijst) {
        DefaultTableModel tabel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };

        String[] column = {"medew_nr", "Voornaam", " Achternaam", "Email adres", "Woonplaats"};
        tabel.setColumnIdentifiers(column);

        for (int i = 0; i < persoonLijst.getSize(); i++) {
            Medewerker persoon = (Medewerker) persoonLijst.getElementAt(i);
            Object[] row = {persoon.getMedew_nr(), persoon.getNaam(), persoon.getAchterNaam(), persoon.getEmail(), persoon.getWoonplaats()};
            tabel.addRow(row);
        }

        persoonTabel.setModel(tabel);
    }

    public void addDatabase(Database database) {
        this.database = database;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton achternaamSort;
    private javax.swing.JButton emailSort;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel filterLabel;
    private javax.swing.JTextField filterVak;
    private javax.swing.JButton informatiePersoonKnop;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable persoonTabel;
    private javax.swing.JButton phoneSort;
    private javax.swing.JButton voornaamSort;
    // End of variables declaration//GEN-END:variables
}
